# Usage:
# cmake -G Ninja
#    -DCMAKE_TOOLCHAIN_FILE=/path/to/this/file
#    -DTARGET_TRIPLE=[aarch64-unknown-linux-gnu|...]

STRING(REGEX REPLACE "-.*" "" ARCH "${TARGET_TRIPLE}")
string(REPLACE "-" "_" triple_ "${TARGET_TRIPLE}")
string(TOUPPER "${triple_}" triple_)
set(SYSROOT $ENV{SMAKE_LLVM_SYSROOT_${triple_}})
set(LLVM_PREFIX $ENV{SMAKE_LLVM_PREFIX})

set(CMAKE_SYSTEM_NAME Linux)
set(CMAKE_SYSTEM_PROCESSOR ${ARCH})

set(APPLE 0)
set(MSVC 0)
set(WIN32 0)
set(UNIX 1)

set(CMAKE_C_COMPILER ${LLVM_PREFIX}clang CACHE INTERNAL "" FORCE)
set(CMAKE_C_COMPILER_TARGET ${TARGET_TRIPLE} CACHE INTERNAL "" FORCE)
set(CMAKE_CXX_COMPILER ${LLVM_PREFIX}clang++ CACHE INTERNAL "" FORCE)
set(CMAKE_CXX_COMPILER_TARGET ${TARGET_TRIPLE} CACHE INTERNAL "" FORCE)
set(CMAKE_ASM_COMPILER_TARGET ${TARGET_TRIPLE} CACHE INTERNAL "" FORCE)

set(CMAKE_SYSROOT ${SYSROOT} CACHE INTERNAL "" FORCE)

set(CMAKE_EXE_LINKER_FLAGS "-fuse-ld=lld" CACHE INTERNAL "" FORCE)
set(CMAKE_SHARED_LINKER_FLAGS "-fuse-ld=lld" CACHE INTERNAL "" FORCE)
set(CMAKE_STATIC_LINKER_FLAGS "" CACHE INTERNAL "" FORCE)
set(CMAKE_MODULE_LINKER_FLAGS "-fuse-ld=lld" CACHE INTERNAL "" FORCE)

set(CMAKE_AR      ${LLVM_PREFIX}llvm-ar  CACHE INTERNAL "" FORCE)
set(CMAKE_LINKER  ${LLVM_PREFIX}clang++  CACHE INTERNAL "" FORCE)
set(CMAKE_NM      ${LLVM_PREFIX}llvm-nm  CACHE INTERNAL "" FORCE)
set(CMAKE_OBJDUMP ${LLVM_PREFIX}llvm-objdump  CACHE INTERNAL "" FORCE)
set(CMAKE_RANLIB  ${LLVM_PREFIX}llvm-ranlib  CACHE INTERNAL "" FORCE)

message(STATUS "LLVM Prefix: \"${LLVM_PREFIX}\"")
message(STATUS "Sysroot: \"${SYSROOT}\"")
message(STATUS "Arch: \"${ARCH}\"")
message(STATUS "Triple: \"${TARGET_TRIPLE}\"")